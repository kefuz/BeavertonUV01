@page
@model BeavertonUV.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Students";
}

<nav class="navbar navbar-expand-sm bg-light">
    <div class="container-fluid">
        <a class="navbar-brand text-black" href="#">Students |</a>

        <! Add new item. >
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">                
                <li class="nav-item">
                    <a class="nav-link" asp-page="Create">
                        <img src="~/icon/addsvg.svg" />
                        <span class="text-capitalize text-decoration-underline">Add new</span>
                    </a>
                </li>

                <li class="nav-item">
                    <a class="nav-link text-capitalize text-decoration-underline"
                       asp-page="./Index">
                        <img src="~/icon/backfullsag.svg" />
                        Back
                    </a>
                </li>
            </ul>

        </div>
    </div>            
    
    <! Searching box and summit button.>

    <form class="d-flex" role="search"
          asp-page="./Index" method="get">

        <input class="kz-SearchBox-Left"
               type="text"
               name="SearchString"
               value="@Model.CurrentFilter"
               placeholder="Find by name" />

        <input type="image" alt="Submit"
               src="~/icon/searchsvg.svg"
               class="btn btn-outline-primary kz-SearchBox-Right" />
    </form>
    <div>
    </div>
</nav>

<table class="table">
    <thead>
        <tr>
            <! 'a' tag is used to get a link element resposing click.>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].LastName)
                </a>
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Students[0].FirstMidName)
            </th>

            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)

                <! Function column ======> 
                <td align="right">
                    <a class="text-decoration-none"
                   asp-page="./Edit" asp-route-id="@item.ID ">
                        <img src="~/icon/editsvg.svg" /> &nbsp
                    </a>

                    <a class="text-decoration-none"
                   asp-page="./Details" asp-route-id="@item.ID">
                        <img src="~/icon/detailsvg.svg" /> &nbsp
                    </a>

                    <a asp-page="./Delete" asp-route-id="@item.ID">
                        <img src="~/icon/deletesvg.svg" />
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
}

<! page moving >
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary btn-sm @prevDisabled ">
    Previous
</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary btn-sm @nextDisabled">
    Next
</a>
